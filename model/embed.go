package model

import (
	"log"
	"os"
)

// EmbedderInterface –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
type EmbedderInterface interface {
	Embed(text string) ([]float32, error)
}

// Embedder –æ—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–º–±–µ–¥–¥–∏–Ω–≥–∞–º–∏
type Embedder struct {
	ollamaEmbedder *OllamaEmbedder
	embeddingType  string
}

// NewEmbedder —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π embedder (—Ç–æ–ª—å–∫–æ Ollama)
func NewEmbedder() *Embedder {

	// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Ollama —ç–º–±–µ–¥–¥–µ—Ä
	ollamaURL := os.Getenv("OLLAMA_EMBEDDING_URL")
	ollamaModel := os.Getenv("OLLAMA_EMBEDDING_MODEL")
	ollamaEmbedder := NewOllamaEmbedder(ollamaURL, ollamaModel)

	log.Printf("[EMBEDDER] ü§ñ Uses local Ollama for embeddings (%s)", ollamaModel)

	return &Embedder{
		ollamaEmbedder: ollamaEmbedder,
		embeddingType:  "ollama",
	}
}

// Embed —Å–æ–∑–¥–∞–µ—Ç —ç–º–±–µ–¥–¥–∏–Ω–≥ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
func (e *Embedder) Embed(text string) ([]float32, error) {
	embedding, err := e.ollamaEmbedder.Embed(text)
	if err != nil {
		log.Printf("[EMBEDDER] Error Ollama embeddings: %v", err)
		return nil, nil
	}
	return embedding, nil
}
